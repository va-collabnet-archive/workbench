import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.config.ConfigUtil;
import net.jini.url.httpmd.HttpmdUtil;

com.sun.jini.start {
   private static host = ConfigUtil.getHostAddress();

   private static jskCodebase = ConfigUtil.concat(new String[] { "http://", host, ":8081/jsk-dl-*.jar"});
   private static jskMdURL = ConfigUtil.concat(new String[] { "httpmd://", host, ":8081/jsk-dl-*.jar;sha=0"});
   private static jskCodebaseMd = HttpmdUtil.computeDigestCodebase("lib-dl", jskMdURL);

   private static JINI_CLASS_SERVER_Codebase = jskCodebase;
   private static JINI_CLASS_SERVER_Policy = "config${/}classServer.policy";
   private static JINI_CLASS_SERVER_Classpath = "lib{/}tools-*.jar";
   private static JINI_CLASS_SERVER_Class = "com.sun.jini.tool.ClassServer";
   private static JINI_CLASS_SERVER_Args = new String[] { "-port", "8081", "-dir", "lib-dl", "-verbose" };

   private static SERVICE_REGISTRAR_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/reggie-dl-*.jar"});
   private static SERVICE_REGISTRAR_Codebase = ConfigUtil.concat(new String[] {SERVICE_REGISTRAR_URL , " ", jskCodebase});
   private static SERVICE_REGISTRAR_Policy = "config${/}reggie.policy";
   private static SERVICE_REGISTRAR_Classpath = "extlib${/}jini${/}reggie.jar";
   private static SERVICE_REGISTRAR_Class = "com.sun.jini.reggie.TransientRegistrarImpl";
   private static SERVICE_REGISTRAR_Args = new String[] { "config${/}reggie.config" };

   private static TRANSACTION_MANAGER_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/mahalo-dl-*.jar"});
   private static TRANSACTION_MANAGER_Codebase = ConfigUtil.concat(new String[] {TRANSACTION_MANAGER_URL , " ", jskCodebase});
   private static TRANSACTION_MANAGER_Policy = "config${/}transactionManager.policy";
   private static TRANSACTION_MANAGER_Classpath = "extlib${/}jini${/}mahalo.jar";
   private static TRANSACTION_MANAGER_Class = "com.sun.jini.mahalo.TransientMahaloImpl";
   private static TRANSACTION_MANAGER_Args = new String[] { "config${/}transactionManager.config" };

   private static JAVA_SPACE_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/outrigger-dl-*.jar"});
   private static JAVA_SPACE_Codebase = ConfigUtil.concat(new String[] {JAVA_SPACE_URL , " ", jskCodebase});
   private static JAVA_SPACE_Policy = "config${/}transient-outrigger.policy";
   private static JAVA_SPACE_Classpath = "extlib${/}jini${/}outrigger.jar";
   private static JAVA_SPACE_Class = "com.sun.jini.outrigger.TransientOutriggerImpl";
   private static JAVA_SPACE_Args = new String[] { "config${/}transient-outrigger.config" };

   private static TRANSACTION_AGGREGATOR_Codebase = jskCodebase;
   private static TRANSACTION_AGGREGATOR_Policy = "config${/}transactionAggregator.policy";
   private static TRANSACTION_AGGREGATOR_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static TRANSACTION_AGGREGATOR_Class = "org.dwfa.jini.TransactionParticipantAggregator";
   private static TRANSACTION_AGGREGATOR_Args = new String[] { "config${/}transactionAggregator.config" };

   private static GENERIC_WORKER_MANAGER_Codebase = jskCodebase;
   private static GENERIC_WORKER_MANAGER_Policy = "config${/}genericWorkerManager.policy";
   private static GENERIC_WORKER_MANAGER_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static GENERIC_WORKER_MANAGER_Class = "org.dwfa.bpa.worker.GenericWorkerManager";
   private static GENERIC_WORKER_MANAGER_Args = new String[] { "config${/}genericWorkerManager.config" };

   private static INBOX_QUEUE_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/processQueue-dl-*.jar"});
   private static INBOX_QUEUE_Codebase = ConfigUtil.concat(new String[] {INBOX_QUEUE_URL , " ", jskCodebase});
   private static INBOX_QUEUE_Policy = "config${/}queueInbox.policy";
   private static INBOX_QUEUE_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static INBOX_QUEUE_Class = "org.dwfa.queue.QueueServer";
   private static INBOX_QUEUE_Args = new String[] { "config${/}queueInbox.config" };

   private static CREATE_MAP_INBOX_QUEUE_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/processQueue-dl-*.jar"});
   private static CREATE_MAP_INBOX_QUEUE_Codebase = ConfigUtil.concat(new String[] {CREATE_MAP_INBOX_QUEUE_URL , " ", jskCodebase});
   private static CREATE_MAP_INBOX_QUEUE_Policy = "config${/}queueInboxCreateMap.policy";
   private static CREATE_MAP_INBOX_QUEUE_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static CREATE_MAP_INBOX_QUEUE_Class = "org.dwfa.queue.QueueServer";
   private static CREATE_MAP_INBOX_QUEUE_Args = new String[] { "config${/}queueInboxCreateMap.config" };

   private static REVIEW_INBOX_QUEUE_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/processQueue-dl-*.jar"});
   private static REVIEW_INBOX_QUEUE_Codebase = ConfigUtil.concat(new String[] {REVIEW_INBOX_QUEUE_URL , " ", jskCodebase});
   private static REVIEW_INBOX_QUEUE_Policy = "config${/}queueInboxReview.policy";
   private static REVIEW_INBOX_QUEUE_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static REVIEW_INBOX_QUEUE_Class = "org.dwfa.queue.QueueServer";
   private static REVIEW_INBOX_QUEUE_Args = new String[] { "config${/}queueInboxReview.config" };

   private static OUTBOX_QUEUE_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/processQueue-dl-*.jar"});
   private static OUTBOX_QUEUE_Codebase = ConfigUtil.concat(new String[] {OUTBOX_QUEUE_URL , " ", jskCodebase});
   private static OUTBOX_QUEUE_Policy = "config${/}queueOutbox.policy";
   private static OUTBOX_QUEUE_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static OUTBOX_QUEUE_Class = "org.dwfa.queue.QueueServer";
   private static OUTBOX_QUEUE_Args = new String[] { "config${/}queueOutbox.config" };

   private static AGING_QUEUE_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/processQueue-dl-*.jar"});
   private static AGING_QUEUE_Codebase = ConfigUtil.concat(new String[] {AGING_QUEUE_URL , " ", jskCodebase});
   private static AGING_QUEUE_Policy = "config${/}queueAging.policy";
   private static AGING_QUEUE_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static AGING_QUEUE_Class = "org.dwfa.queue.QueueServer";
   private static AGING_QUEUE_Args = new String[] { "config${/}queueAging.config" };

   private static COMPUTE_QUEUE_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/processQueue-dl-*.jar"});
   private static COMPUTE_QUEUE_Codebase = ConfigUtil.concat(new String[] {COMPUTE_QUEUE_URL , " ", jskCodebase});
   private static COMPUTE_QUEUE_Policy = "config${/}queueCompute.policy";
   private static COMPUTE_QUEUE_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static COMPUTE_QUEUE_Class = "org.dwfa.queue.QueueServer";
   private static COMPUTE_QUEUE_Args = new String[] { "config${/}queueCompute.config" };

   private static LAUNCHER_QUEUE_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/processQueue-dl-*.jar"});
   private static LAUNCHER_QUEUE_Codebase = ConfigUtil.concat(new String[] {LAUNCHER_QUEUE_URL , " ", jskCodebase});
   private static LAUNCHER_QUEUE_Policy = "config${/}queueLauncher.policy";
   private static LAUNCHER_QUEUE_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static LAUNCHER_QUEUE_Class = "org.dwfa.queue.QueueServer";
   private static LAUNCHER_QUEUE_Args = new String[] { "config${/}queueLauncher.config" };

   private static LOG_SERVICE_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/distributedLog-dl-*.jar"});
   private static LOG_SERVICE_Codebase = ConfigUtil.concat(new String[] {LOG_SERVICE_URL , " ", jskCodebase});
   private static LOG_SERVICE_Policy = "config${/}logManagerService.policy";
   private static LOG_SERVICE_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static LOG_SERVICE_Class = "org.dwfa.log.LogManagerService";
   private static LOG_SERVICE_Args = new String[] { "config${/}logManagerService.config" };

   private static SEQUENCE_AUTHORITY_VERHOEFF_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/assignmentAuthority-dl-*.jar"});
   private static SEQUENCE_AUTHORITY_VERHOEFF_Codebase = ConfigUtil.concat(new String[] {SEQUENCE_AUTHORITY_VERHOEFF_URL , " ", jskCodebase});
   private static SEQUENCE_AUTHORITY_VERHOEFF_Policy = "config${/}assignmentAuthorityVerhoeff.policy";
   private static SEQUENCE_AUTHORITY_VERHOEFF_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static SEQUENCE_AUTHORITY_VERHOEFF_Class = "org.dwfa.aa.AssignmentAuthorityService";
   private static SEQUENCE_AUTHORITY_VERHOEFF_Args = new String[] { "config${/}assignmentAuthorityLongVerhoeff.config" };

   private static OID_UUID_AUTHORITY_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/assignmentAuthority-dl-*.jar"});
   private static OID_UUID_AUTHORITY_Codebase = ConfigUtil.concat(new String[] {OID_UUID_AUTHORITY_URL , " ", jskCodebase});
   private static OID_UUID_AUTHORITY_Policy = "config${/}assignmentAuthorityOidUuid.policy";
   private static OID_UUID_AUTHORITY_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static OID_UUID_AUTHORITY_Class = "org.dwfa.aa.AssignmentAuthorityService";
   private static OID_UUID_AUTHORITY_Args = new String[] { "config${/}assignmentAuthorityOidUuid.config" };

   private static UUID_AUTHORITY_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/assignmentAuthority-dl-*.jar"});
   private static UUID_AUTHORITY_Codebase = ConfigUtil.concat(new String[] {UUID_AUTHORITY_URL , " ", jskCodebase});
   private static UUID_AUTHORITY_Policy = "config${/}assignmentAuthorityUuid.policy";
   private static UUID_AUTHORITY_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static UUID_AUTHORITY_Class = "org.dwfa.aa.AssignmentAuthorityService";
   private static UUID_AUTHORITY_Args = new String[] { "config${/}assignmentAuthorityUuid.config" };

   private static QUEUE_VIEWER_Codebase = jskCodebase;
   private static QUEUE_VIEWER_Policy = "config${/}queueViewer.policy";
   private static QUEUE_VIEWER_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static QUEUE_VIEWER_Class = "org.dwfa.queue.gui.QueueViewerFrame";
   private static QUEUE_VIEWER_Args = new String[] { "config${/}queueViewer.config" };

   private static PROCESS_BUILDER_Codebase = jskCodebase;
   private static PROCESS_BUILDER_Policy = "config${/}processBuilder.policy";
   private static PROCESS_BUILDER_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static PROCESS_BUILDER_Class = "org.dwfa.bpa.gui.ProcessBuilderFrame";
   private static PROCESS_BUILDER_Args = new String[] { "config${/}processBuilder.config" };

   private static TERM_SERVER_RAM_URL = ConfigUtil.concat(new String[] {"http://", host, ":8081/term-dl-*.jar"});
   private static TERM_SERVER_RAM_Codebase = ConfigUtil.concat(new String[] {TERM_SERVER_RAM_URL , " ", jskCodebase});
   private static TERM_SERVER_RAM_Policy = "config${/}termserverRam.policy";
   private static TERM_SERVER_RAM_Classpath = "lib${/}dwa.jar${path.separator}extlib${/}jaf${/}activation.jar${path.separator}lib${/}MacAdaptor.jar${path.separator}extlib${/}mail${/}mail.jar${path.separator}extlib${/}mail${/}smtp.jar${path.separator}extlib${/}mail${/}pop3.jar";
   private static TERM_SERVER_RAM_Class = "org.dwfa.awb.server.implementation.JiniTermServer";
   private static TERM_SERVER_RAM_Args = new String[] { "config${/}termserverRam.config" };

   static serviceDescriptors = new ServiceDescriptor[] {
     new NonActivatableServiceDescriptor(JINI_CLASS_SERVER_Codebase,JINI_CLASS_SERVER_Policy,JINI_CLASS_SERVER_Classpath,JINI_CLASS_SERVER_Class,JINI_CLASS_SERVER_Args),
     new NonActivatableServiceDescriptor(SERVICE_REGISTRAR_Codebase,SERVICE_REGISTRAR_Policy,SERVICE_REGISTRAR_Classpath,SERVICE_REGISTRAR_Class,SERVICE_REGISTRAR_Args),
     new NonActivatableServiceDescriptor(TRANSACTION_MANAGER_Codebase,TRANSACTION_MANAGER_Policy,TRANSACTION_MANAGER_Classpath,TRANSACTION_MANAGER_Class,TRANSACTION_MANAGER_Args),
     new NonActivatableServiceDescriptor(JAVA_SPACE_Codebase,JAVA_SPACE_Policy,JAVA_SPACE_Classpath,JAVA_SPACE_Class,JAVA_SPACE_Args),
     new NonActivatableServiceDescriptor(TRANSACTION_AGGREGATOR_Codebase,TRANSACTION_AGGREGATOR_Policy,TRANSACTION_AGGREGATOR_Classpath,TRANSACTION_AGGREGATOR_Class,TRANSACTION_AGGREGATOR_Args),
     new NonActivatableServiceDescriptor(GENERIC_WORKER_MANAGER_Codebase,GENERIC_WORKER_MANAGER_Policy,GENERIC_WORKER_MANAGER_Classpath,GENERIC_WORKER_MANAGER_Class,GENERIC_WORKER_MANAGER_Args),
     new NonActivatableServiceDescriptor(INBOX_QUEUE_Codebase,INBOX_QUEUE_Policy,INBOX_QUEUE_Classpath,INBOX_QUEUE_Class,INBOX_QUEUE_Args),
     new NonActivatableServiceDescriptor(CREATE_MAP_INBOX_QUEUE_Codebase,CREATE_MAP_INBOX_QUEUE_Policy,CREATE_MAP_INBOX_QUEUE_Classpath,CREATE_MAP_INBOX_QUEUE_Class,CREATE_MAP_INBOX_QUEUE_Args),
     new NonActivatableServiceDescriptor(REVIEW_INBOX_QUEUE_Codebase,REVIEW_INBOX_QUEUE_Policy,REVIEW_INBOX_QUEUE_Classpath,REVIEW_INBOX_QUEUE_Class,REVIEW_INBOX_QUEUE_Args),
     new NonActivatableServiceDescriptor(OUTBOX_QUEUE_Codebase,OUTBOX_QUEUE_Policy,OUTBOX_QUEUE_Classpath,OUTBOX_QUEUE_Class,OUTBOX_QUEUE_Args),
     new NonActivatableServiceDescriptor(AGING_QUEUE_Codebase,AGING_QUEUE_Policy,AGING_QUEUE_Classpath,AGING_QUEUE_Class,AGING_QUEUE_Args),
     new NonActivatableServiceDescriptor(COMPUTE_QUEUE_Codebase,COMPUTE_QUEUE_Policy,COMPUTE_QUEUE_Classpath,COMPUTE_QUEUE_Class,COMPUTE_QUEUE_Args),
     new NonActivatableServiceDescriptor(LAUNCHER_QUEUE_Codebase,LAUNCHER_QUEUE_Policy,LAUNCHER_QUEUE_Classpath,LAUNCHER_QUEUE_Class,LAUNCHER_QUEUE_Args),
     new NonActivatableServiceDescriptor(LOG_SERVICE_Codebase,LOG_SERVICE_Policy,LOG_SERVICE_Classpath,LOG_SERVICE_Class,LOG_SERVICE_Args),
     new NonActivatableServiceDescriptor(SEQUENCE_AUTHORITY_VERHOEFF_Codebase,SEQUENCE_AUTHORITY_VERHOEFF_Policy,SEQUENCE_AUTHORITY_VERHOEFF_Classpath,SEQUENCE_AUTHORITY_VERHOEFF_Class,SEQUENCE_AUTHORITY_VERHOEFF_Args),
     new NonActivatableServiceDescriptor(OID_UUID_AUTHORITY_Codebase,OID_UUID_AUTHORITY_Policy,OID_UUID_AUTHORITY_Classpath,OID_UUID_AUTHORITY_Class,OID_UUID_AUTHORITY_Args),
     new NonActivatableServiceDescriptor(UUID_AUTHORITY_Codebase,UUID_AUTHORITY_Policy,UUID_AUTHORITY_Classpath,UUID_AUTHORITY_Class,UUID_AUTHORITY_Args),
     new NonActivatableServiceDescriptor(QUEUE_VIEWER_Codebase,QUEUE_VIEWER_Policy,QUEUE_VIEWER_Classpath,QUEUE_VIEWER_Class,QUEUE_VIEWER_Args),
     new NonActivatableServiceDescriptor(PROCESS_BUILDER_Codebase,PROCESS_BUILDER_Policy,PROCESS_BUILDER_Classpath,PROCESS_BUILDER_Class,PROCESS_BUILDER_Args),
     new NonActivatableServiceDescriptor(TERM_SERVER_RAM_Codebase,TERM_SERVER_RAM_Policy,TERM_SERVER_RAM_Classpath,TERM_SERVER_RAM_Class,TERM_SERVER_RAM_Args)
   };
}
