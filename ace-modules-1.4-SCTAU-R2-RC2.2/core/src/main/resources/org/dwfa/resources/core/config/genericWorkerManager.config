import net.jini.constraint.*;
import net.jini.core.constraint.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import net.jini.jeri.ssl.*;
import javax.security.auth.login.LoginContext;
import net.jini.discovery.LookupDiscovery;
import net.jini.lookup.ServiceDiscoveryManager;
import com.sun.security.auth.callback.DialogCallbackHandler;
import com.sun.jini.config.KeyStores;
import java.util.Collections;
import java.security.Permission;
import net.jini.security.AccessPermission;
import net.jini.security.AuthenticationPermission;
import net.jini.security.BasicProxyPreparer;
import java.net.SocketPermission;

org.dwfa.bpa.worker.GenericWorkerManager {
    workerName = new String("generic");
    //numOfWorkers = new Integer(0);
	name = "generic worker manager";
    exporter = new net.jini.jeri.BasicJeriExporter(net.jini.jeri.tcp.TcpServerEndpoint.getInstance(0), new net.jini.jeri.BasicILFactory());
}


org.dwfa.bpa.worker.GenericWorker {
	tranDurLong = new Long(300000);
	serviceDiscovery = org.dwfa.bpa.worker.MasterWorker.serviceDiscovery;

    preparer =
	new BasicProxyPreparer(false,  new Permission[] {new SocketPermission("*:1024-", "connect") });

}


org.dwfa.bpa.worker.MasterWorker {
    tranDurLong = new Long(300000);
    private groups = new String[] { "org.dwfa.discovery" };
    serviceDiscovery = new ServiceDiscoveryManager(
        new LookupDiscovery(groups, this), null, this);
    preparer =
	new BasicProxyPreparer(false,  new Permission[] {new SocketPermission("*:1024-", "connect") });
} 


/* Configuration block for the lookup discovery utility */
net.jini.discovery.LookupDiscovery {
    registrarPreparer = new BasicProxyPreparer(
	false /* verify */,
	new Permission[] {
	    new SocketPermission("*:1024-", "connect")
	});

}//end net.jini.discovery.LookupDiscovery

/* Configuration block for the SDM */
net.jini.lookup.ServiceDiscoveryManager {

    registrarPreparer = net.jini.discovery.LookupDiscovery.registrarPreparer;

}//end net.jini.lookup.ServiceDiscoveryManager
