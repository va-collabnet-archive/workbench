/**
 * Copyright (c) 2009 International Health Terminology Standards Development Organisation
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ihtsdo.batch;

import java.util.Comparator;
import java.util.List;
import javax.swing.GroupLayout;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import org.dwfa.ace.api.I_AmTermComponent;
import org.ihtsdo.batch.BatchActionEvent.BatchActionEventType;
import org.ihtsdo.batch.BatchActionTask.BatchActionTaskType;
import org.ihtsdo.tk.api.ComponentVersionBI;
import org.ihtsdo.tk.api.concept.ConceptChronicleBI;
import org.ihtsdo.tk.api.coordinate.EditCoordinate;
import org.ihtsdo.tk.api.coordinate.ViewCoordinate;
import org.ihtsdo.tk.api.relationship.RelationshipVersionBI;
import org.ihtsdo.tk.dto.concept.component.refex.TK_REFEX_TYPE;

/**
 *
 * @author marc
 */
public class BatchActionTaskDescriptionRefsetAddMemberUI extends javax.swing.JPanel implements I_BatchActionTask {

    BatchActionTask task;
    boolean useFilter;

    /**
     * Creates new form BatchActionTaskDescriptionRefsetAddMemberUI
     */
    public BatchActionTaskDescriptionRefsetAddMemberUI() {
        initComponents();

        // TASK
        this.task = new BatchActionTaskDescriptionRefsetAddMember();

        // Setup DnD Add Member To Refset
        ValueDndNidUI tmp = new ValueDndNidUI("To Refset:");
        GroupLayout layout = (GroupLayout) jPanelAction.getLayout();
        layout.replace(jPanelDndAddToRefset, tmp.getPanel());
        jPanelDndAddToRefset = tmp.getPanel();

        // Setup DnD Add Member Value Panel
        layout = (GroupLayout) jPanelAction.getLayout();
        tmp = new ValueDndNidUI("Add Concept Value:");
        layout.replace(jPanelSetMemberValue, tmp.getPanel());
        jPanelSetMemberValue = tmp.getPanel();

        useFilter = false;
        jPanelDndAddToRefset.setEnabled(true);
        jPanelDndAddToRefset.setVisible(true);
        jPanelSetMemberValue.setEnabled(true);
        jPanelSetMemberValue.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCriteria = new javax.swing.JPanel();
        jComboBoxSearchByConstraint = new javax.swing.JComboBox();
        jCheckBoxSearchIsCaseSensitive = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxSearchByType = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxSearchByLanguage = new javax.swing.JComboBox();
        jTextFieldSearchText = new javax.swing.JTextField();
        jPanelAction = new javax.swing.JPanel();
        jPanelSetMemberValue = new javax.swing.JPanel();
        jPanelDndAddToRefset = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(218, 120));

        jPanelCriteria.setBorder(javax.swing.BorderFactory.createTitledBorder("Criteria"));

        jComboBoxSearchByConstraint.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Text Does Not Apply", "Contains", "Begins with", "Ends with" }));
        jComboBoxSearchByConstraint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchByContraintActionPerformed(evt);
            }
        });

        jCheckBoxSearchIsCaseSensitive.setText("Case Sensitive Criteria");
        jCheckBoxSearchIsCaseSensitive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSearchIsCaseSensitiveActionPerformed(evt);
            }
        });

        jLabel3.setText("Type:");

        jComboBoxSearchByType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-------", "FSN", "Synonym", "Definition" }));
        jComboBoxSearchByType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchByTypeActionPerformed(evt);
            }
        });

        jLabel4.setText("Language");

        jComboBoxSearchByLanguage.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--", "EN", "DA", "ES", "FR", "LIT", "LT", "NL", "PL", "SV", "ZH" }));
        jComboBoxSearchByLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchByLanguageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCriteriaLayout = new javax.swing.GroupLayout(jPanelCriteria);
        jPanelCriteria.setLayout(jPanelCriteriaLayout);
        jPanelCriteriaLayout.setHorizontalGroup(
            jPanelCriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCriteriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCriteriaLayout.createSequentialGroup()
                        .addComponent(jCheckBoxSearchIsCaseSensitive)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jComboBoxSearchByType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxSearchByLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCriteriaLayout.createSequentialGroup()
                        .addComponent(jComboBoxSearchByConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSearchText)))
                .addContainerGap())
        );
        jPanelCriteriaLayout.setVerticalGroup(
            jPanelCriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCriteriaLayout.createSequentialGroup()
                .addGroup(jPanelCriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxSearchByConstraint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelCriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxSearchIsCaseSensitive)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxSearchByType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxSearchByLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelAction.setBorder(javax.swing.BorderFactory.createTitledBorder("Action:"));

        javax.swing.GroupLayout jPanelSetMemberValueLayout = new javax.swing.GroupLayout(jPanelSetMemberValue);
        jPanelSetMemberValue.setLayout(jPanelSetMemberValueLayout);
        jPanelSetMemberValueLayout.setHorizontalGroup(
            jPanelSetMemberValueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelSetMemberValueLayout.setVerticalGroup(
            jPanelSetMemberValueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 56, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelDndAddToRefsetLayout = new javax.swing.GroupLayout(jPanelDndAddToRefset);
        jPanelDndAddToRefset.setLayout(jPanelDndAddToRefsetLayout);
        jPanelDndAddToRefsetLayout.setHorizontalGroup(
            jPanelDndAddToRefsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelDndAddToRefsetLayout.setVerticalGroup(
            jPanelDndAddToRefsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelActionLayout = new javax.swing.GroupLayout(jPanelAction);
        jPanelAction.setLayout(jPanelActionLayout);
        jPanelActionLayout.setHorizontalGroup(
            jPanelActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelActionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelSetMemberValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelDndAddToRefset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanelActionLayout.setVerticalGroup(
            jPanelActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelActionLayout.createSequentialGroup()
                .addComponent(jPanelDndAddToRefset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSetMemberValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCriteria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelAction, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelAction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxSearchByLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchByLanguageActionPerformed
        int idx = ((JComboBox) evt.getSource()).getSelectedIndex();
        ((BatchActionTaskDescriptionRefsetAddMember) task).setSearchByLanguage(idx);
    }//GEN-LAST:event_jComboBoxSearchByLanguageActionPerformed

    private void jComboBoxSearchByTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchByTypeActionPerformed
        int idx = ((JComboBox) evt.getSource()).getSelectedIndex();
        ((BatchActionTaskDescriptionRefsetAddMember) task).setSearchByType(idx);
    }//GEN-LAST:event_jComboBoxSearchByTypeActionPerformed

    private void jCheckBoxSearchIsCaseSensitiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSearchIsCaseSensitiveActionPerformed
        boolean checkboxState = ((JCheckBox) evt.getSource()).isSelected();
        ((BatchActionTaskDescriptionRefsetAddMember) task).setIsSearchCaseSensitive(checkboxState);
    }//GEN-LAST:event_jCheckBoxSearchIsCaseSensitiveActionPerformed

    private void jComboBoxSearchByContraintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchByContraintActionPerformed
        int idx = ((JComboBox) evt.getSource()).getSelectedIndex();
        ((BatchActionTaskDescriptionRefsetAddMember) task).setSearchByTextConstraint(idx);
    }//GEN-LAST:event_jComboBoxSearchByContraintActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxSearchIsCaseSensitive;
    private javax.swing.JComboBox jComboBoxSearchByConstraint;
    private javax.swing.JComboBox jComboBoxSearchByLanguage;
    private javax.swing.JComboBox jComboBoxSearchByType;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanelAction;
    private javax.swing.JPanel jPanelCriteria;
    private javax.swing.JPanel jPanelDndAddToRefset;
    private javax.swing.JPanel jPanelSetMemberValue;
    private javax.swing.JTextField jTextFieldSearchText;
    // End of variables declaration//GEN-END:variables

    @Override // I_BatchActionTask
    public JPanel getPanel() {
        return this;
    }

    @Override // I_BatchActionTask
    public void updateExisting(
            List<RelationshipVersionBI> existingParents,
            List<ComponentVersionBI> existingConceptRefsets,
            List<ComponentVersionBI> existingDescriptionRefsets,
            List<RelationshipVersionBI> existingRoles,
            List<ComponentVersionBI> parentLinkages) {

        // Sort existing parents by name.
        Comparator<ComponentVersionBI> cmp = new Comparator<ComponentVersionBI>() {

            @Override // Comparator
            public int compare(ComponentVersionBI o1, ComponentVersionBI o2) {
                return o1.toUserString().compareToIgnoreCase(o2.toUserString());
            }
        };
    }

    @Override // I_BatchActionTask
    public BatchActionTask getTask(EditCoordinate ec, ViewCoordinate vc, List<ConceptChronicleBI> concepts) {
        // referenced component provided at execution time

        // Description Search Text
        String valStr = jTextFieldSearchText.getText();
        if (valStr.equalsIgnoreCase("")) {
            valStr = null;
        }
        ((BatchActionTaskDescriptionRefsetAddMember) task).setSearchText(valStr);

        // SET REFSET DND COLLECTION NID
        I_AmTermComponent refsetAddToCB = ((ValueDndNidUI) jPanelDndAddToRefset).getTermComponent();
        if (refsetAddToCB != null) {
            ((BatchActionTaskConceptRefsetAddMember) task).setCollectionNid(refsetAddToCB.getConceptNid());
        } else {
            BatchActionEventReporter.add(new BatchActionEvent(null, BatchActionTaskType.CONCEPT_REFSET_ADD_MEMBER,
                    BatchActionEventType.TASK_INVALID, "missing refset to add to"));
            return null;
        }

        // SET VALUE
        ((BatchActionTaskDescriptionRefsetAddMember) task).setRefsetType(TK_REFEX_TYPE.CID);
        Integer valConcept = ((ValueDndNidUI) jPanelSetMemberValue).getValue();
        if (valConcept != null) {
            ((BatchActionTaskDescriptionRefsetAddMember) task).setRefsetSetValue(valConcept);
            return task;
        }

        BatchActionEventReporter.add(new BatchActionEvent(null, BatchActionTaskType.CONCEPT_REFSET_ADD_MEMBER,
                BatchActionEventType.TASK_INVALID, "match value not set"));
        return null;
    }
}
