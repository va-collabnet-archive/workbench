import java.io.File;
import java.net.SocketPermission;
import java.security.Permission;

import net.jini.constraint.*;
import net.jini.core.constraint.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import net.jini.jeri.ssl.*;
import javax.security.auth.login.LoginContext;
import net.jini.lookup.ServiceDiscoveryManager;
import com.sun.security.auth.callback.DialogCallbackHandler;
import net.jini.discovery.LookupDiscovery;
import com.sun.jini.config.KeyStores;
import java.util.Collections;
import java.security.Permission;
import net.jini.security.AccessPermission;
import net.jini.security.AuthenticationPermission;
import net.jini.security.BasicProxyPreparer;

org.dwfa.bpa.gui.ProcessBuilderFrame {
    initialLookupGroups = new String[] { "org.dwfa.discovery" };
    frameName = new String("Process Builder");
}

org.dwfa.bpa.gui.ProcessBuilderPanel {
    defaultOrigin = new String("dwa1@informatics.com");
}


org.dwfa.bpa.worker.MasterWorker {

	name = "Process builder worker";

    startupDirectory = new File("processes/workspace/encounter/startup");

    private groups = org.dwfa.bpa.gui.ProcessBuilderFrame.initialLookupGroups;
    serviceDiscovery = new ServiceDiscoveryManager(
        new LookupDiscovery(groups, this), null, this);
	
    preparer =
	new BasicProxyPreparer(false,  new Permission[] {new SocketPermission("*:1024-", "connect") });

    tranDurLong = new Long(300000);

}

/* Configuration block for the lookup discovery utility */
net.jini.discovery.LookupDiscovery {

    registrarPreparer = new BasicProxyPreparer(
	false /* verify */,
	new Permission[] {
	    new SocketPermission("*:1024-", "connect")
	});

}//end net.jini.discovery.LookupDiscovery

/* Configuration block for the SDM */
net.jini.lookup.ServiceDiscoveryManager {

    registrarPreparer = net.jini.discovery.LookupDiscovery.registrarPreparer;

}//end net.jini.lookup.ServiceDiscoveryManager
