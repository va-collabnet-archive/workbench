import org.dwfa.queue.DefaultQueueComparator;
import org.dwfa.queue.QueueWorkerSpec;
import org.dwfa.queue.bpa.worker.CollabOutboxQueueWorker;
import org.dwfa.queue.bpa.worker.CollabInboxQueueWorker;
import org.dwfa.queue.bpa.worker.HeadlessQueueWorker;
import org.dwfa.jini.ElectronicAddress;
import org.dwfa.bpa.process.I_SelectProcesses;
import org.dwfa.queue.SelectIfDeadlineOverdue;
import org.dwfa.queue.SelectAll;

import java.io.File;
import java.net.SocketPermission;
import java.security.Permission;
import java.util.UUID;

import net.jini.config.AbstractConfiguration;
import net.jini.core.entry.Entry;
import net.jini.discovery.LookupDiscovery;
import net.jini.id.Uuid;
import net.jini.id.UuidFactory;
import net.jini.lookup.entry.Name;
import net.jini.lookup.ServiceDiscoveryManager;
import net.jini.security.BasicProxyPreparer;

org.dwfa.queue.QueueServer {
	objectGetter = new org.dwfa.queue.DefaultObjectInputStreamCreator();
	entries = new Entry[] { org.dwfa.jini.TermEntry.getInboxQueueType(), new Name("**queueName**"), 
							new ElectronicAddress("**queueName**") }; 
	workerSpecs = new QueueWorkerSpec[] { 
		 new QueueWorkerSpec(CollabInboxQueueWorker.class, "Inbox Collab worker", UUID.randomUUID(), new SelectAll()) 
	};
	nativeComparator = new DefaultQueueComparator();
	directory = new File("queues/**queueName**"); 	
	nodeInboxAddress = new String("**queueName**"); 
}

org.dwfa.queue.bpa.worker.CollabInboxQueueWorker {
    	tranDurLong = new Long(300000);
	
	// TRACKER PARAMETERS
	repoUrlStr = "https://csfe.aceworkspace.net";
	repoTrackerIdStr = "tracker1157";
    
      // SESSION LOGIN PARAMETERS
	userNameStr = "**collabnetUserName**"; 
	userPwdStr = "**collabnetPassword**"; 

      // CATEGORY PARAMETERS
	category01Str = "NA/not_assigned";
	category02Str = "NA/not_assigned";
	category03Str = "NA/not_assigned";
	category04Str = "NA/not_assigned";
	category05Str = "NA/not_assigned";
	category06Str = "NA/not_assigned";

      initialLookupGroups = org.dwfa.queue.QueueServer.initialLookupGroups;
}

/* Configuration block for the lookup discovery utility */
net.jini.discovery.LookupDiscovery {

    registrarPreparer = new BasicProxyPreparer(
	false /* verify */,
	new Permission[] {
	    new SocketPermission("*:1024-", "connect")
	});

}//end net.jini.discovery.LookupDiscovery

/* Configuration block for the SDM */
net.jini.lookup.ServiceDiscoveryManager {

    registrarPreparer = net.jini.discovery.LookupDiscovery.registrarPreparer;

}//end net.jini.lookup.ServiceDiscoveryManager
