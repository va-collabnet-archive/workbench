<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>wb-mmb</artifactId>
    <groupId>org.ihtsdo</groupId>
    <version>2.5.1-trek-inf-1-SNAPSHOT</version>
  </parent>
  <groupId>org.ihtsdo</groupId>
  <artifactId>wb-docs</artifactId>
  <version>2.5.1-trek-inf-1-SNAPSHOT</version>
  <name>documentation from DITA sources</name>
  <description>Take a set of DITA files and transform them to various output formats using the
    DITA Open Toolkit. The output format produced is controlled by maven profiles - see the end
    of the pom.xml file. </description>
  <build>
    <defaultGoal>exec:exec</defaultGoal>
    <plugins>
      <plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>exec-maven-plugin</artifactId>
    <version>1.1</version>
    <executions>
      <execution>
        <phase>compile</phase>
        <goals>
          <goal>exec</goal>
        </goals>
      </execution>
    </executions>
    <configuration>
      <skip>false</skip>
      <executable>java</executable>
      <!-- optional -->
      <workingDirectory>.</workingDirectory>
      <outputFile>mvn-exec.log</outputFile>
      <arguments>
        <!-- this structure mirrors that generated by the oXygen DITA  transformation (in transform.sh). -->
        
        <argument> -Xmx512m </argument>
        <!--						<argument> -Xms512m </argument>-->
        <argument> -classpath </argument>
        <argument>
          "/Applications/eclipse/plugins/com.oxygenxml.editor_10.3.0/tools/ant/lib/ant-launcher.jar" </argument>
        <argument>
          -Dant.home="/Applications/eclipse/plugins/com.oxygenxml.editor_10.3.0/tools/ant" </argument>
        <argument> org.apache.tools.ant.launch.Launcher </argument>
        <!--<argument> -d</argument>
          <argument> -v</argument>-->
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/classes" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/author.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/oxygen.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/oxygenEclipse.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/authorEclipse.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/resolver.jar" </argument>
        <argument> -lib </argument>
        <argument> ${dita-ot-basedir} </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/commons-io-1.3.1.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/commons-logging-1.0.4.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/log4j.jar" </argument>
        <argument> -lib </argument>
        <argument> "${dita-ot-basedir}/lib/dost.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/xercesImpl.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/saxon.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/xmlgraphics-commons-1.3.1.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/fop.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/batik-all-1.7.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/xml-apis-xpath.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/xml-apis-ext.jar" </argument>
        <argument> -lib </argument>
        <argument> "${oxygen-basedir}/lib/avalon-framework-4.2.0.jar" </argument>
        <argument> -f </argument>
        <argument> ${dita-ot-basedir}/build.xml </argument>
        <argument> -Ddita.extname=.dita </argument>
        <argument>
          -Dargs.hdr="${guidebook-dita-basedir}/HTML-extras/IHTSDO_Header.html"</argument>
        <argument> -Dargs.outext=html</argument>
        <argument> -Dargs.xhtml.toc=toc_raw</argument>
        <argument> -Ddita.dir=${dita-ot-basedir} </argument>
        <argument> -Ddita.input.valfile=${guidebook-dita-basedir}/PDF_UK.ditaval </argument>
        <argument> -Ddita.temp.dir=${guidebook-dita-basedir}/temp </argument>
        <!-- looks like we need absolute path -->
        <argument> -Dtranstype=${transtype} </argument>
        <argument> -Dargs.logdir="log" </argument>
        <argument>
          -Dargs.input=${guidebook-dita-basedir}/${book-dir}/${ditamap-filename} </argument>
        <argument> -Doutput.dir=${project.build.directory}/${output-dir} </argument>
        <!-- should use 'parent' 'target' dir -->
        <!-- looks like we need absolute path -->
        <argument> -Dbasedir=${guidebook-dita-basedir}/${book-dir} </argument>
        <!-- looks like we need absolute path -->
        <argument> -Dxep.dir=${xep-dir} </argument>
        <argument> -Dpdf.formatter=${pdf-formatter} </argument>
        <argument> -Douter.control=quiet</argument>
        <argument> -Dgenerate.copy.outer=2</argument>
        <argument> -Donlytopic.in.map=false</argument>
        <!-- should be set in profile -->
        <argument> -logger </argument>
        <argument> org.dita.dost.log.DITAOTBuildLogger </argument>
      </arguments>
      
      <systemProperties>
        <systemProperty>
          <key>myproperty</key>
          <value>myvalue</value>
        </systemProperty>
      </systemProperties>
    </configuration>
  </plugin>
  
  </plugins>
  </build>
  <profiles>
    <profile>
      <id>pdf-fop</id>
      <activation>
      </activation>
      <properties>
        <transtype>"pdf2"</transtype>
        <output-dir>"pdf-basic"</output-dir>
        <pdf-formatter>"fop"</pdf-formatter>
      </properties>
    </profile>
    <profile>
      <id>pdf-xep</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>${project.transtype}</name>
          <value>xep</value>
        </property>
      </activation>
      <properties>
        <transtype>"pdf2"</transtype>
        <output-dir>"pdf"</output-dir>
        <pdf-formatter>"xep"</pdf-formatter>
      </properties>
    </profile>
    <profile>
      <id>html</id>
      <properties>
        <transtype>"xhtml"</transtype>
        <output-dir>"${book-dir}/xhtml"</output-dir>
      </properties>
    </profile>
  </profiles>
</project>
