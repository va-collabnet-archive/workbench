<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE dita PUBLIC "-//OASIS//DTD DITA 1.1 Composite//EN"
  "http://docs.oasis-open.org/dita/v1.1/OS/dtd/ditabase.dtd">
<dita>
<!-- generated by DCL filter dwhtm, Ver 3.3 m206 h286 -->

<topic id="topic1" xml:lang="en">
<title>Building an application bundle</title>
<body>
<section>An IHTSDO Workbench IDE application bundle is a package of compo­nents
ready for installation on an end-user's computer. Such a bundle includes
the various software components, configuration files, policy files, predefined
workflow tasks, a database containing one or more versions of SNOMED,
and other additional term sets relevant to the terminology mod­eller's
functional requirements. A terminology modeller may have several different
bundles on his/her machine, particularly during a period of rapid functional
change. In such cases, it is important to differentiate and clarify the
functionality provided by each bundle.</section>
<section id="aw1047511">For building all or part of an IHTSDO Workbench
IDE bundle, the software development team makes use of Maven, and Maven’s project object model (POM<fn id="aw1057322">see <xref
 href="http://java.sun.com/docs/books/tutorial/javabeans/index.html"
scope="external" format="html"><ph>http://java.sun.com/docs/books/tutorial/javabeans/index.html</ph></xref></fn><xref
href="#topic1/aw1057322" scope="local" type="fn" format="dita"></xref>)
and plug-ins<fn id="aw1057343">The POM is the metadata that Maven needs to work with a project.
The filename is “pom.xml” and is located in the root directory for
each project.</fn><xref href="#topic1/aw1057343" scope="local" type="fn"
format="dita"></xref>. Plug-ins define Goals<fn id="aw1057365">Maven
is organized in plug-ins. Every piece of functionality in Maven is contained
within a plugin.</fn><xref href="#topic1/aw1057365" scope="local" type="fn"
format="dita"></xref>  and use the metadata found in the POM to perform their task. Maven is driven by the POM’s and plug-ins used within the POMS for every Maven project. A typical IHTSDO Workbench IDE bundle would
comprise a set of Maven subprojects, gov­erned by a master “bundle”
project. <indexterm>Maven
</indexterm><indexterm>Maven
</indexterm><indexterm>POM
</indexterm><indexterm>POM
</indexterm><indexterm>POM
</indexterm><indexterm>Maven
</indexterm><indexterm>POM
</indexterm><indexterm>POM
</indexterm><indexterm>Maven
</indexterm></section>
<section id="aw1047568">Each Maven project has its own POM and each Maven project typically has one primary output. The rest
of this section describes the Maven projects typically used to generate an IHTSDO Workbench
application bundle build.<indexterm>Maven
</indexterm><indexterm>POM
</indexterm><indexterm>Maven
</indexterm><indexterm>Maven
</indexterm></section>
<section id="aw1047587">Each Maven project for the editing application bundle build follows
Maven’s recommended directory structure, naming conventions
for the directory structure and the naming conventions for the primary
output of the project. Some of the key projects used to define an editing
application bun­dle project  are:<indexterm>Maven
</indexterm><indexterm>Maven
</indexterm></section>
<section id="aw1047605">
<title>IHTSDO Workbench-api project</title>
</section>
<section id="aw1047618">The IHTSDO Workbench API project contains the large set
of classes that embody most of the IHTSDO Workbench Editor functionality
that might need to be referenced by those developers intending to extend
or enhance the editor. Source code is not open source. Contact Informatics
Inc. for details.  Target code is packaged under Maven as <ph>ace-api-</ph><ph>VERSION</ph><ph>.jar</ph><indexterm>Maven
</indexterm><indexterm>ace-api
</indexterm></section>
<section id="aw1047637">
<title>foundation project<ph><indexterm>foundation java components
<indexterm>Maven project</indexterm>
</indexterm><indexterm>Maven project
<indexterm>foundation</indexterm>
</indexterm></ph></title>
</section>
<section id="aw1047650">The foundation project contains utility classes that are
general in nature and shared by all the project modules. Source code
is distributed under the Apache 2 open source licence and is managed
via the collabnet subversion repository at <xref
 href="https://dwfa.aceworkspace.net/" scope="external" format="html"><ph>https://dwfa.aceworkspace.net/</ph></xref>.
Source code has been contrib­uted by Informatics Inc.  Target code is
packaged under Maven as <ph>founda­tion-</ph><ph>VERSION</ph><ph>.jar</ph><indexterm>subversion
</indexterm><indexterm>Maven
</indexterm></section>
<section id="aw1047672">
<title>core project<ph><indexterm>core DWFA components
<indexterm>project Maven project
<indexterm>core</indexterm></indexterm>
</indexterm></ph></title>
</section>
<section id="aw1047685">This project contains the majority of basic business logic
classes that con­trol the distributed workflow capability, including
business process control and scheduling and queuing classes. Source code
is distributed under the Apache 2 open source licence and is managed
via the collabnet subversion repository at <xref
 href="https://dwfa.aceworkspace.net/" scope="external" format="html"><ph>https://dwfa.aceworkspace.net/</ph></xref>.
Source code has been contrib­uted by Informatics Inc. Target code is
packaged under Maven as <ph>core-</ph><ph>VERSION</ph><ph>.jar</ph>.<indexterm>subversion
</indexterm><indexterm>Maven
</indexterm></section>
<section id="aw1047708">
<title>vodb project<ph><indexterm>vodb java components
<indexterm>project</indexterm>
</indexterm><indexterm>Maven proect
<indexterm>vodb</indexterm>
</indexterm></ph></title>
</section>
<section id="aw1047721">The Versioned Object Database (VODB) project uses the java Berkeley DB<fn id="aw1057383">Goals are what are executed to perform an action on the project.
For example, the jar:jar will compile the current project and produce
a JAR. Each goal exists in a plugin, and the goal name typically reflects
the plugin (e.g. java:comple comes from the java plugin).</fn><xref
href="#topic1/aw1057383" scope="local" type="fn" format="dita"></xref>
framework and engine developed by  Sleepycat Software, and now managed
by Oracle.<indexterm>VODB
</indexterm><indexterm>BerkeleyDB
</indexterm><indexterm>Berkeley DB
</indexterm><indexterm>Maven goals
</indexterm></section>
<section id="aw1047786">
<title>term-mojo project<ph><indexterm>term-mojo 
<indexterm>Maven project</indexterm>
</indexterm><indexterm>Maven project
<indexterm>vodb</indexterm>
</indexterm></ph></title>
</section>
<section id="aw1047799">This project manages building  Maven plugins that, in turn,  are used to transform terminology
data in preparation for importing into standard file formats used by
the IHTSDO Workbench version-orented database, and by other applications.<indexterm>Maven
</indexterm></section>
</body>
</topic>

<topic id="topic2" xml:lang="en">
<title>Setting up for Maven builds</title>
<body>
<section id="aw1047941">Maven uses a declarative dependency technique
and distributed repository approach to constructing applications. Application
developers invoke Maven to build an application bundle based on the versions
of components specified in one or more POM (<ph>pom.xml</ph>) files. IHTSDO Workbench appli­cations
 rely on a set of prebuilt java class libraries some of which were described
in the preding section as projects and others of which are described
briefly in <xref
 href="#topic2/aw1073878" type="table" format="dita"></xref> . Developers need to ensure that the appropriate and
compatible versions of these java class libraries are utilised in their
Maven builds. <indexterm>POM
</indexterm></section>
<table id="aw1073878">
<desc>
<p>Java class library .jar files used by IHTSDO Workbench applications</p>
</desc>
<tgroup cols="3">
<colspec colnum="1" colname="col1" colwidth="113*" />
<colspec colnum="2" colname="col2" colwidth="83*" />
<colspec colnum="3" colname="col3" colwidth="137*" />
<thead>
<row>
<entry colname="col1"><p>jar file</p></entry>
<entry colname="col2"><p>primary code provider</p></entry>
<entry colname="col3"><p>project and description</p></entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1"><p><ph>ace-api-1.17.jar</ph></p></entry>
<entry colname="col2"><p>Informatics Inc.</p></entry>
<entry colname="col3"><p>IHTSDO Workbench API class library </p></entry>
</row>
<row>
<entry colname="col1"><p><ph>activation-1.1.jar</ph></p></entry>
<entry colname="col2"><p>Sun Microsystems</p></entry>
<entry colname="col3"></entry>
</row>
<row>
<entry colname="col1"><p><ph>browser-2.1.jar</ph></p></entry>
<entry colname="col2"><p>Sun Microsystems</p></entry>
<entry colname="col3"><p>jini classes</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>colt-1.2.0.jar</ph></p></entry>
<entry colname="col2"><p>CERN-European Organization for Nuclear Research</p></entry>
<entry colname="col3"><p>Scientific algorithms</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>commons-collec­tions-3.1.jar</ph></p></entry>
<entry colname="col2"><p>Apache Software Foundation</p></entry>
<entry colname="col3"><p>extensive Collection classes</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>concurrent-1.3.4.jar</ph></p></entry>
<entry colname="col2"><p>BEA Systems Inc. and IBM</p></entry>
<entry colname="col3"><p>Concurrency (multithreading) sup­port<fn
id="aw1074146"><xref

href="http://g.oswego.edu/dl/classes/EDU/oswego/cs/dl/util/concurrent/intro.html"
scope="external" format="html"><ph>http://g.oswego.edu/dl/classes/EDU/oswego/cs/dl/util/concurrent/intro.html</ph></xref></fn><xref
href="#topic2/aw1074146" scope="local" type="fn" format="dita"></xref></p></entry>
</row>
<row>
<entry colname="col1"><p><ph>core-2.0.13.jar</ph></p></entry>
<entry colname="col2"><p>Informatics Inc.</p></entry>
<entry colname="col3"><p>IHTSDO Workbench Distributed Worfklow Architecture
core libary</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>foundation-2.0.17.jar</ph></p></entry>
<entry colname="col2"><p>Informatics Inc.</p></entry>
<entry colname="col3"><p>IHTSDO Workbench Distributed Worfklow Architecture
foundation component library</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>icons-1.8.jar</ph></p></entry>
<entry colname="col2"><p>Informatics Inc. and various sources</p></entry>
<entry colname="col3"><p>IHTSDO Workbench editor icon library</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>jcommon-1.0.0.jar</ph></p></entry>
<entry colname="col2"><p>JFree.org</p></entry>
<entry colname="col3"><p> a collection of useful classes used by JFreeChart,</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>je-3.2.74.jar</ph></p></entry>
<entry colname="col2"><p>Oracle</p></entry>
<entry colname="col3"><p>Berkeley database class library</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>jfreechart-1.0.0.jar</ph></p></entry>
<entry colname="col2"><p>JFree.org</p></entry>
<entry colname="col3"><p>2D charting library for visualising business
process statistics.</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>jsk-lib-2.1.jar</ph></p></entry>
<entry colname="col2"><p>Apache Software Foundation and Sun Microsystems</p></entry>
<entry colname="col3"><p>Core Jini classes</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>jsk-platform-2.1.jar</ph></p></entry>
<entry colname="col2"><p>Informatics Inc.</p></entry>
<entry colname="col3"><p>IHTSDO Workbench-applied Jini classes</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>jung-1.7.6.jar</ph></p></entry>
<entry colname="col2"><p>JUNG contributors <fn id="aw1074249"><xref
 href="http://jung.sourceforge.net/" scope="external" format="html"><ph>http://jung.sourceforge.net/</ph></xref></fn><xref
href="#topic2/aw1074249" scope="local" type="fn" format="dita"></xref></p></entry>
<entry colname="col3"><p>Java Universal Network/Graph Framework - a graphing
library used for displaying terminology polyhier­archies</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>lucene-core-2.3.2.jar</ph></p></entry>
<entry colname="col2"><p>Apache Software Foundation<fn id="aw1074264"><xref
 href="http://lucene.apache.org" scope="external" format="html"><ph>http://lucene.apache.org</ph></xref></fn><xref
href="#topic2/aw1074264" scope="local" type="fn" format="dita"></xref></p></entry>
<entry colname="col3"><p>Lucene Java - high performance search engine
library</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>mahalo-2.1.jar</ph></p></entry>
<entry colname="col2"><p>Sun Microsystems</p></entry>
<entry colname="col3"><p>Mahalo - A Jini(TM) Transaction Manager Service</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>mail-1.4.jar</ph></p></entry>
<entry colname="col2"><p>Sun Microsystems</p></entry>
<entry colname="col3"><p>SMTP, IMAP and POP3 e-mail classes</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>reggie-2.1.jar</ph></p></entry>
<entry colname="col2"><p>Sun Microsystems</p></entry>
<entry colname="col3"><p>Service Registry classes for Jini</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>start-2.1.jar</ph></p></entry>
<entry colname="col2"><p>Sun Microsystems</p></entry>
<entry colname="col3"><p>Jini starter kit</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>svn-javahl-1.4.4.jar</ph></p></entry>
<entry colname="col2"><p>Tigris.org</p></entry>
<entry colname="col3"><p>subversion support</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>svnkit-1.1.4.3248.jar</ph></p></entry>
<entry colname="col2"><p>Tigris.org</p></entry>
<entry colname="col3"><p>subversion support</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>tools-2.1.jar</ph></p></entry>
<entry colname="col2"><p>Sun Microsystems</p></entry>
<entry colname="col3"><p>Jini tool library</p></entry>
</row>
<row>
<entry colname="col1"><p><ph>vodb-1.20.jar</ph></p></entry>
<entry colname="col2"><p>Informatics Inc.</p></entry>
<entry colname="col3"><p>Versioned Object Database - IHTSDO Workbench
persistent store for multi-versioned, multiple terminologies.</p></entry>
</row>
</tbody>
</tgroup>
</table>

</body>
</topic>

<topic id="topic3" xml:lang="en">
<title>Installation readiness with Install4j<ph><indexterm>Installation
</indexterm></ph></title>
<body>
<section id="aw1071990">Although the IHTSDO Toolkit is platform independent,
built on Sun Micro­systems Java technologies, there are sufficient variations<fn
id="aw1072026">e.g. script files, component naming, desktop windowing
environments, folder or direc­tory locations, etc.</fn><xref
href="#topic3/aw1072026" scope="local" type="fn" format="dita"></xref>
in the operating systems of end user machines that some tailoring of
the installation of IHTSDO Workbench IDEs or viewers for common operating
systems will most likely be required. The recommended product for building
an installer is <ph>install4j</ph><fn id="aw1072036">see <xref
 href="http://www.ej-technologies.com" scope="external" format="html"><ph>http://www.ej-technologies.com</ph></xref>
for product details</fn><xref href="#topic3/aw1072036" scope="local"
type="fn" format="dita"></xref>. Install4j has a number of features that
are likely to be attractive to terminology development organisations,
including:-<indexterm>install4j
</indexterm></section>
<p>Native launcher generation</p>
<section>install4j generates application launchers that are native on
every supported platform: Windows executables are com­piled with exe4j
technology; Unix shell scripts are created for Unix plat­forms and application
bundles are created for Mac OS X. These launchers offer flexible JRE-detection.
</section>
<p>Advanced JRE bundling</p>
<section>One of the core requirements for a Java-aware installer builder
is the ability to bundle a JRE with the installer. Install4j supports
JRE download-on demand, Pack200 compression or shared installations of
JRE bundles. Pre-packaged JRE bundles can be downloaded from within the
install4j IDE. </section>
<p>Extensive i18n support</p>
<section>install4j fully supports localizing your installer to multiple
languages, offering a large number of installer languages. Sin­gle-
or multi-language installers that detect the actual language at runtime
can be built. </section>
</body>
</topic>

<topic id="topic4" xml:lang="en">
<title>Distribution and update via Continuum</title>
<body>
<section>Continuum is an Apache product for managing automatic updates and syn­chronisation
of deployments in a distributed environment. </section>

</body>
</topic>
</dita>
