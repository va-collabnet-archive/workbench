<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA 1.1 Composite//EN"
"http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="topic9" xml:lang="en">
  <title>Refset Specification Language</title>

  <prolog>
    <author>Eric Browne</author>

    <metadata>
      <keywords>
        <indexterm>refsets<indexterm>specification query
        language</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>

  <body>
    <section>The preferred mechanism for creating reference sets is via the
    specification reference set mechanism described in <xref format="dita"
    href="RefSets_spec_manually.dita">Creating a Specification Refset
    Manually</xref>. In order to rule in or rule out concepts in the SNOMED
    hierarchy for membership in a reference set (refset), the appropriate
    inclusion/exclusion expression must be created in the specification
    reference set. The IHTSDO Terminology IDE provides a query language for
    building these expressions.</section>

    <section><title>Relationship to SNOMED Expression Language</title>
    <note>It is important not to confuse the refset expression building query
    language with the SNOMED Expression Language used to formally define
    concepts via Description Logics nor the related SNOMED expression language
    used for constructing post-coordinated expressions for populating data
    fields. </note></section>

    <section><title>Relationship types</title><p>Before introducing the
    expression syntax, first let's look at the important relationship types
    CONCEPT-IS, CONCEPT-IS-CHILD-OF, CONCEPT-IS-DESCENDENT-OF, and
    CONCEPT-IS-KIND-OF. These relationships, and their corresponding
    Description and Relationship cousins ( e.g. RELATIONSHIP-TYPE-IS-CHILD-OF
    ) are encountered extensively in the specification of reference sets.
    Let's consider a simplified fragment of the SNOMED <i>Clincal Finding</i>
    hierarchy dealing with |Pneumonia|, depicted in <xref
    href="#topic9/hierarchy_pneumonia"/>.<fig id="hierarchy_pneumonia">
        <title>Pneumonia and some of its descendent concepts</title>

        <image href="../images/Refsets_Images/hierarchy_pneumonia.jpg"/>
      </fig></p><p><ul>
        <li><b>CONCEPT-IS</b> <i>&lt;some concept&gt;</i>-
        <indexterm>CONCEPT-IS clause</indexterm>This declares a single exact
        concept to be a member of the refset, and is illustrated in <xref
        format="dita" href="#topic9/concept-is"/>.<fig id="concept-is">
            <title>CONCEPT-IS Pneumonia clause</title>

            <image href="../images/Refsets_Images/concept-is_pneumonia.jpg"/>
          </fig></li>

        <li><b>CONCEPT-IS-CHILD-OF</b> <i>&lt;some concept&gt;</i>-
        <indexterm>CONCEPT-IS-CHILD-OF clause</indexterm>this declares that
        all children of the named concept will be members of the target
        refset, unless excluded by another (AND NOT .. ) clause in the
        specification. Note that the named concept, | pneumonia | , will NOT
        be included, unless it is included via a separate (OR) clause in the
        specification. The resulting selected concepts are illustrated in
        <xref href="#topic9/concept-is-child-of"/>.<fig
            id="concept-is-child-of">
            <title>CONCEPT-IS-CHILD-OF Pneumonia clause</title>

            <image href="../images/Refsets_Images/concept-is-child-of_pneumonia.jpg"/>
          </fig></li>

        <li><b>CONCEPT-IS-DESCENDENT-OF</b> <i>&lt;some concept&gt;</i>-
        <indexterm>CONCEPT-IS-DESCENDENT-OF clause</indexterm>this declares
        that all descendents ( children, grandchildren, great-grandchildren,
        etc.) of the named concept will be members of the target refset,
        unless excluded by another (AND NOT .. ) clause in the specification.
        Note that the named concept, | pneumonia | , will NOT be included,
        unless it is included via a separate (OR) clause in the specification.
        See <xref href="#topic9/concept-is-descendent-of"/>.<fig
            id="concept-is-descendent-of">
            <title>CONCEPT-IS-DESCENDENT-OF Pneumonia clause</title>

            <image href="../images/Refsets_Images/concept-is-descendent-of_pneumonia.jpg"/>
          </fig></li>

        <li><b>CONCEPT-IS-KIND-OF</b> <i>&lt;some concept&gt;</i>-
        <indexterm>CONCEPT-IS-KIND-OF clause</indexterm>this declares that the
        named concept itself AND all descendents ( children, grandchildren,
        great-grandchildren, etc.) of the named concept will be members of the
        target refset, unless excluded by another (AND NOT .. ) clause in the
        specification. See <xref href="#topic9/concept-is-kind-of"/>.<fig
            id="concept-is-kind-of">
            <title>CONCEPT-IS-KIND-OF Pneumonia clause</title>

            <image href="../images/Refsets_Images/concept-is-kind-of_pneumonia.jpg"/>
          </fig></li>
      </ul></p></section>

    <section><title>Query Language syntax</title> <p>The Terminology IDE
    syntax is designed to support the currently identified requirements for
    specifying which terminology components (concepts, descriptions,
    relationships) should be included or excluded from a given reference set.
    Since the inclusion and exclusion criteria for a deeply nested taxonomy
    can be quite complex, the ability to build expressions using an expression
    builder is one of the requirements reflected in the Query Language.
    Expressions can be built using combinations of nested logical
    <b><tt>AND</tt></b>, <b><tt>OR</tt></b> and <b><tt>NOT</tt></b> statements
    and the syntax is best illustrated through examples.</p></section>

    <section><title>Example 1: Finding Refset Specification</title> <p> The
    following expression specifies a refset whose members are all those
    concepts who are members of an existing <i>Finding refset</i>, but
    explicitly excluding any concepts which are members of the <i>Height
    refset</i>, the <i>Blood Pressure refset</i> or the <i>Smoking
    refset</i>.<codeblock>
     AND
        CONCEPT-IS-MEMBER-OF:     Finding refset
        NOT CONCEPT-IS-MEMBER-OF: Height refset
        NOT CONCEPT-IS-MEMBER-OF: Blood Pressure refset
        NOT CONCEPT-IS-MEMBER-OF: Smoking refset
     </codeblock> </p></section>

    <section><title>Example 2: Cognition Refset Specification</title> <p> This
    second example not only selects concepts based on their location in the
    SNOMED Is-a hierarchy, but also uses a concept qualifier (<i>status</i>)
    to only select those concepts with a status of <i>current</i> to be
    members of the specified refset.<codeblock>
     AND 
       OR
          CONCEPT-IS-KIND-OF:    Finding related to ability to react
          CONCEPT-IS-KIND-OF:    Cognitive Function Finding
       NOT CONCEPT-IS-MEMBER-OF: Cognition Removed
       CONCEPT-STATUS-IS:        Current
</codeblock></p> <p>If we analyse the above specification in some detail, we
    find that the resulting reference set contains many concepts from several
    branches of the SNOMED taxonomy, and in so doing, masks out a set of
    explicit concepts contained in the <i>Cognition removed</i> refset. The
    layout of the specification refset after it is constructed in the
    Workbench IDE is illustrated in <xref format="dita"
    href="#topic9/cognition_specification"/>. </p> <fig
        id="cognition_specification">
        <title>Constructed specification expression for "Cognition"
        refset</title>

        <image href="../images/Refsets_Images/cognition_specification.jpg"/>
      </fig> <p>A Venn diagram which shows an alternative view of the
    corresponding logical expression is also illustrated in <xref
    format="dita" href="#topic9/cognition_venn"/>.</p> <fig
        id="cognition_venn">
        <title>Simplified Venn diagram for "Cognition" refset</title>

        <image href="../images/Refsets_Images/cognition_venn.jpg"/>
      </fig> <p>The content of the masked out Cognition removed refset as it
    appears when constructed using the specification query language is shown
    in <xref format="dita"
    href="#topic9/cognition_removed_specification"/>.</p> <fig
        id="cognition_removed_specification">
        <title>Constructed specification expression for "Concept Removed"
        refset</title>

        <image href="../images/Refsets_Images/cognition_removed_specification.jpg"/>
      </fig></section>

    <section><title>Example 3: Activites of Daily Living </title> <p>
    <codeblock>   OR
     AND
         IS-KIND-OF: Finding of Activity of Daily Living
         CONCEPT-STATUS-IS: Current NOT
         CONCEPT-IS: Finding of activity of dailiy living
         NOT CONCEPT-IS: Basic activity of Daily Living
         NOT CONCEPT-IS: Dressing (ADL Finding)
       ... (there are &gt;300 excluded concepts in the spec)
     CONCEPT-IS: At risk of choking
     CONCEPT-IS: At risk for aspiration CONCEPT-IS: Eating faeces
     CONCEPT-IS: Habitual eating of own hair
     CONCEPT-IS: Eating own flesh
     CONCEPT-IS: Pica
     CONCEPT-IS: Under care of stoma nurse
     CONCEPT-IS: Urinary stoma bag adjusted
     CONCEPT-IS: Urinary stoma bag changed
     CONCEPT-IS: Smearing faeces
    </codeblock> </p></section>

    <section><title>Terminology IDE Query Language Syntax: </title> <p>
    <codeblock>   Qualifier
       NOT
   Query Tokens
       &lt;qualifier&gt; AND
       &lt;qualifier&gt; OR
       &lt;qualifier&gt; CONCEPT-CONTAINS-REL
       &lt;qualifier&gt; CONCEPT-CONTAINS-DESC


       &lt;qualifier&gt; CONCEPT-IS-CHILD-OF              &lt;concept&gt;
       &lt;qualifier&gt; CONCEPT-IS                       &lt;concept&gt;
       &lt;qualifier&gt; CONCEPT-IS-DESCENDENT-OF         &lt;concept&gt;
       &lt;qualifier&gt; CONCEPT-IS-KIND-OF               &lt;concept&gt;
       &lt;qualifier&gt; CONCEPT-IS-MEMBER-OF             &lt;refset concept&gt;
       &lt;qualifier&gt; CONCEPT-STATUS-IS-CHILD-OF       &lt;status concept&gt;
       &lt;qualifier&gt; CONCEPT-STATUS-IS                &lt;status concept&gt;
       &lt;qualifier&gt; CONCEPT-STATUS-IS-DESCENDENT-OF  &lt;status concept&gt;
       &lt;qualifier&gt; CONCEPT-STATUS-IS-KIND-OF        &lt;status concept&gt;


       &lt;qualifier&gt; DESC-LUCENE-MATCH                &lt;string&gt;
       &lt;qualifier&gt; DESC-REGEX-MATCH                 &lt;string&gt;
       &lt;qualifier&gt; DESC-IS                          &lt;concept&gt;
       &lt;qualifier&gt; DESC-IS-MEMBER-OF                &lt;refset concept&gt;
       &lt;qualifier&gt; DESC-STATUS-IS-CHILD-OF          &lt;status concept&gt;
       &lt;qualifier&gt; DESC-STATUS-IS                   &lt;status concept&gt;
       &lt;qualifier&gt; DESC-STATUS-IS-DESCENDENT-OF     &lt;status concept&gt;
       &lt;qualifier&gt; DESC-STATUS-IS-KIND-OF           &lt;status concept&gt;
       &lt;qualifier&gt; DESC-TYPE-IS-CHILD-OF            &lt;desc type concept&gt;
       &lt;qualifier&gt; DESC-TYPE-IS                     &lt;desc type concept&gt;
       &lt;qualifier&gt; DESC-TYPE-IS-DESCENDENT-OF       &lt;desc type concept&gt;
       &lt;qualifier&gt; DESC-TYPE-IS-KIND-OF             &lt;desc type concept&gt;


       &lt;qualifier&gt; REL-CHARACTERISTIC-IS-CHILD-OF    &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-CHARACTERISTIC-IS             &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-CHARACTERISTIC-IS-DESCENDENT-OF &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-CHARACTERISTIC-IS-KIND-OF     &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-DESTINATION-IS-CHILD-OF       &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-DESTINATION-IS                &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-DESTINATION-IS-DESCENDENT-OF  &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-DESTINATION-IS-KIND-OF        &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-IS-MEMBER-OF                  &lt;refset concept&gt;
       &lt;qualifier&gt; REL-REFINABILITY-IS-CHILD-OF      &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-REFINABILITY-IS               &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-REFINABILITY-IS-DESCENDENT-OF &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-REFINABILITY-IS-KIND-OF       &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-STATUS-IS-CHILS-OF            &lt;status concept&gt;
       &lt;qualifier&gt; REL-STATUS-IS                     &lt;status concept&gt;
       &lt;qualifier&gt; REL-STATUS-IS-DESCENDENT-OF       &lt;status concept&gt;
       &lt;qualifier&gt; REL-STATUS-IS-KIND-OF             &lt;status concept&gt;
       &lt;qualifier&gt; REL-TYPE-IS-CHILD-OF              &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-TYPE-IS                       &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-TYPE-IS-DESCENDENT-OF         &lt;rel type concept&gt;
       &lt;qualifier&gt; REL-TYPE-IS-KIND-OF               &lt;rel type concept&gt;
      
    </codeblock> </p></section>

    <section><title>RefSet Types: </title> <p> <codeblock>
     CONCEPT-CONCEPT
        e.g.  &lt;qualifier&gt; AND
              &lt;qualifier&gt; OR
              &lt;qualifier&gt; CONCEPT-CONTAINS-REL
              &lt;qualifier&gt; CONCEPT-CONTAINS-DESC
        
     CONCEPT-CONCEPT-CONCEPT
           (Language refsets support the triple...)
        e.g.   &lt;qualifier&gt; CONCEPT-IS-MEMBER-OF &lt;refset concept&gt; 
        
     CONCEPT-CONCEPT-STRING
         e.g.  &lt;qualifier&gt; DESC-REGEX-MATCH  &lt;string&gt;
               &lt;qualifier&gt; DESC-LUCENE-MATCH &lt;string&gt;
     
    </codeblock> </p></section>

    <note>This specification could be implemented using a "polymorphic" refset
    that may contain these three refset types. Alternatively, it could be
    implemented with a single refset type:
    <codeph>CONCEPT-CONCEPT-STRING</codeph>, where the String would be
    variably intrepreted, but that presents problems of "context sensitive"
    intrepretation and formatting (displaying a concept description in one
    case, and a string in the other cases).</note>

    <section><title>Refset Fields:</title> <codeblock>
   F MemberID           The identifier of this refset member
   F StatusID
   F BranchID
   F EffectiveTime
   F RefsetID           The identifier of the concept that identifies this refset
   F ComponentID        The component identifier that this   member extends.
                        If the ComponentID is the RefsetID, then this member is part of the top level
                        "OR" clauses.
                        If the ComponentID is another member, then this member is subordinate to that
                        member, forming the basis for nesting which will control execution order to ensure
                        reproducible results.
</codeblock> <p> <codeblock>
     ------------------
     V QualifierID           Id for True or False (+, -)?
     V QueryTokenId          Id for the Query Token (and/or)
     ------------------
     V QualifierID           Id for True or False (+, -)? 
     V QueryTokenId          Id for the Query Token (children of)
     V QueryInputId          Id for the input to the Query  (the concept you want the children of) 
     ------------------
     V QualifierID           Id for True or False (+, -)?
     V QueryTokenId          Id for the Query Token (Lucene or Regex)
     V QueryInputString      Query String  (e.g. +corneal +abrasion)
     ------------------
    </codeblock> </p></section>

    <section id="query_token_definitions"><title>Query token
    definitions</title> <p> <dl>
        <dlentry>
          <dt>CONCEPT-IS-CHILD-OF</dt>

          <dd><indexterm>CONCEPT-IS-CHILD-OF
          clause</indexterm><indexterm>refset specification
          expression<indexterm>CONCEPT-IS-CHILD-OF
          clause</indexterm></indexterm> selects all children of the named
          concept to be included as a member of the target refset.</dd>
        </dlentry>

        <dlentry>
          <dt>CONCEPT-IS-DESCENDENT-OF</dt>

          <dd><indexterm>CONCEPT-IS-DESCENDENT-OF
          clause</indexterm><indexterm>refset specification
          expression<indexterm>CONCEPT-IS-DESCENDENT-OF
          clause</indexterm></indexterm> selects all descendents of the named
          concept to be included as a member of the target refset.</dd>
        </dlentry>

        <dlentry>
          <dt>CONCEPT-IS</dt>

          <dd><indexterm>CONCEPT-IS clause</indexterm><indexterm>refset
          specification expression<indexterm>CONCEPT-IS
          clause</indexterm></indexterm> selects the named concept to be
          included as a member of the refset.</dd>
        </dlentry>

        <dlentry>
          <dt>CONCEPT-IS-KIND-OF</dt>

          <dd><indexterm>CONCEPT-IS-KIND-OF
          clause</indexterm><indexterm>refset specification
          expression<indexterm>CONCEPT-IS-KIND-OF
          clause</indexterm></indexterm> selects the named concept, and any
          descendent of the named concept to be included as a member of the
          refset.</dd>
        </dlentry>

        <dlentry>
          <dt>CONCEPT-IS-MEMBER-OF</dt>

          <dd><indexterm>CONCEPT-IS-MEMBER-OF
          clause</indexterm><indexterm>refset specification
          expression<indexterm>CONCEPT-IS-MEMBER-OF
          clause</indexterm></indexterm> selects all members of the refset
          named by this concept to be included as members of the target
          refset.</dd>
        </dlentry>

        <dlentry>
          <dt>CONCEPT-STATUS-IS</dt>

          <dd><indexterm>CONCEPT-STATUS-IS clause</indexterm><indexterm>refset
          specification expression<indexterm>CONCEPT-STATUS-IS
          clause</indexterm></indexterm> selects all concepts having a status
          matching the named concept ( e.g. <i>current</i>)</dd>
        </dlentry>

        <dlentry>
          <dt>AND</dt>

          <dd><indexterm>AND clause</indexterm><indexterm>refset specification
          expression<indexterm>logical AND clause</indexterm></indexterm>
          applies a logical AND to the members selected by the expressions
          that precede and succeed the AND</dd>
        </dlentry>

        <dlentry>
          <dt>OR</dt>

          <dd><indexterm>OR clause</indexterm><indexterm>refset specification
          expression<indexterm>logical OR clause</indexterm></indexterm>
          applies a logical OR to the members selected by the expressions that
          precede and succeed the OR</dd>
        </dlentry>
      </dl> </p></section>
  </body>
</topic>
